pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
--mines
--by joe jarvis
--v1.0 (2020.07.26)

function _init()
	printh("--start mines--")

	cartdata("r01-minesweeper")
	high_score = dget(0)

	-- if high score is 0 (unset), set it to 500 seconds
	if (high_score == 0) then
		high_score = 500 * 30
		dset(0, high_score)
	end

	-- board mask consts
	is_mine = 0x80
	is_flagged = 0x40
	is_maybe_flagged = 0x20
	is_clear = 0x10
	value_mask = 0x0f -- number of adjacent mines

	-- direction maps
	-- up, up right, right, down right, down, down left, left, up left
	dc = {0, 1, 1, 1, 0, -1, -1, -1}
	dr = {-1, -1, 0, 1, 1, 1, 0, -1}


	reset_board()
end

function _update()
	timer += 1

	local adj = false

	if (btnp(⬅️)) move_cur(7)
	if (btnp(➡️)) move_cur(3)
	if (btnp(⬆️)) move_cur(1)
	if (btnp(⬇️)) move_cur(5)

	-- if game is not started, ❎ and 🅾️ start the game
	if (not game.started and (btnp(❎) or btnp(🅾️))) then
		game.started = true
		timer = 0
	end

	-- if game ended, ❎ and 🅾️ reset board
	if (game.over and (btnp(❎) or btnp(🅾️))) then
		game.over = false
		game.started = false
		game.win = false
		reset_board()
		return
	end

	-- if 🅾️, clear tile
	if (btnp(🅾️)) then
		clear(cur.row, cur.col)
	-- if ❎, flag tile
	elseif (btnp(❎)) then
		flag(cur.row, cur.col)
	end
end

function _draw()
	cls()

	-- load main map
	map(0, 0)
	-- high score stored as frames, displayed as seconds
	-- row 0
	print_center("★high score: " .. flr(high_score / 30), 0, -2)

	-- if game is currently in progress
	if (game.started and (not game.over)) then
		-- col 2, row 1 (row offset by 2)
		print(flr(timer / 30), 16, 10)
		print_center("mines", 3, 0)
	else
		-- if game ended in loss, print loss msg
		if (game.over and (not game.win)) then
			print_center("you lose! press 🅾️ to try again", 3, 1)
		-- if game ended in win, print win msg
		elseif (game.win) then
			print_center("you win! press 🅾️ to play again", 3, 1)
		end
		print(flr(frozen_timer / 30), 16, 10)
	end

	-- if game hasn't started yet
	if (not game.started) then
		-- print start message
		print_center("press 🅾️ to start playing", 3, -1)
	end

	-- col 14, row 1 (row offset by 2)
	print(board.active_mines, 112, 10)


	-- row 15
	print_center("🅾️ to clear ◆ ❎ to flag", 15, -3)

	draw_board()
	draw_cur()
end

-- center text
function print_center(s, r, extra)
	print(s, 64 - (#s * 2) + extra, r * 8 + 2)
end
-->8
-- cursor

-- initialize vars
function reset_board()
	-- timer stores frames since reset or game starting
	-- frozen timer stores duration of last game
	frozen_timer = 0
	timer = 0

	game = {
		started = false, -- if the game is in progress
		over = false, -- if the game ended
		win = false -- if the game was won
	}

	make_cur()
	make_board()
end

-- cursor has position relative to origin of board
function make_cur()
	cur = {}
	cur.col = 1
	cur.row = 1
end

-- adjust the cursor in a direction
function move_cur(d)
	local adj = find_adjacent(cur.row, cur.col, d, true)
	cur.row = adj.row
	cur.col = adj.col
end

function draw_cur()
	local sprite = 16
	-- change sprite every ~.5 secs to animate
	if (timer % 30 > 15) sprite = 32
	-- print cur
	-- board origin is (3, 6) on tilemap
	-- add 2 and 5 because tilemap is 1 indexed
	spr(sprite, (cur.col + 2) * 8, (cur.row + 5) * 8)
end
-->8
-- sampler

function make_sampler(n)
	-- create sampler obj
	local sampler = {}
	sampler.items = {}
	-- fill sampler data
	for i = 1, n, 1 do
		sampler.items[i] = i - 1
	end

	-- remove number from sampler
	sampler.remove_number = function(n)
		del(sampler.items, n)
	end

	-- get a random item w/o replacement
	sampler.get_sample = function()
		-- choose a random index
		r = 1 + flr(rnd(#sampler.items - 1))
		-- get item from index
		tmp = sampler.items[r]
		-- delete item from sampler
		deli(sampler.items, r)

		return tmp
	end

	return sampler
end
-->8
-- board

-- bitwise func
-- used to check if a given bit is set
function is_set(r, c, bitw)
	return ((board.tiles[r][c] & bitw) == bitw)
end

-- encode a position to a single number
function encode_pos(r, c)
	return c - 1 + board.columns * (r + board.rows - 1) - board.area
end

-- decode a number into a row and column
function decode_pos(pos)
	res = {}

	pos += board.area
	res.col = pos % board.columns + 1
	pos = flr(pos / board.columns)
	res.row = pos % board.rows + 1

	return res
end

-- find pos of tile in adjacent direction
function find_adjacent(r, c, d, wrap)
	res = {}

	-- dr and dc represent the change in value for row and columns in a given direction
	-- see dr and dc's def in make_board
	res.row = r + dr[d]
	res.col = c + dc[d]

	if (wrap) then
		-- index underflows to last row
		if (res.row < 1) then
			res.row = board.rows
		-- index overflows to first row
		elseif (res.row > board.rows) then
			res.row = 1
		end

		-- same with columns
		if (res.col < 1) then
			res.col = board.columns
		elseif (res.col > board.columns) then
			res.col = 1
		end
	-- if row or column are out of bounds,
	-- return false to show adjacent tile does not exist
	elseif (res.row < 1 or res.row > board.rows or res.col < 1 or res.col > board.columns) then
		return false
	end
	return res
end

-- generate mines, excluding a position
function generate_mines(r, c)
	-- create sampler with all positions on board
	local smp = make_sampler(board.area)
	-- remove tile the player cleared from sampler
	smp.remove_number(encode_pos(r, c))
	for d = 1, 8, 1 do
		-- remove all adjacent tiles from sampler
		local adj = find_adjacent(r, c, d, false)
		if (adj) then
			smp.remove_number(encode_pos(adj.row, adj.col))
		end
	end

	-- generate mines for game
	for i = 1, board.mines, 1 do
		-- get random position on board
		local r = smp.get_sample()
		local pos = decode_pos(r)
		-- mark as mine
		board.tiles[pos.row][pos.col] |= is_mine
		-- increase adjacent values for nearby mines
		for d = 1, 8, 1 do
			local adj = find_adjacent(pos.row, pos.col, d, false)
			if (adj) then
				board.tiles[adj.row][adj.col] += 1
			end
		end
	end
end

-- flag a given tile
function flag(r, c)
	-- return if clear (can't flag cleared tile)
	if (is_set(r, c, is_clear)) return

	-- if flagged, maybe flag
	if (is_set(r, c, is_flagged)) then
		board.active_mines += 1
		board.tiles[r][c] ^^= is_flagged
		board.tiles[r][c] |= is_maybe_flagged
	-- if maybe flag, remove flag
	elseif (is_set(r, c, is_maybe_flagged)) then
		board.tiles[r][c] ^^= is_maybe_flagged
	-- if unflagged, add flag
	else
		board.active_mines -= 1
		board.tiles[r][c] |= is_flagged
	end
	-- flag noise
	sfx(3)
end

-- clear a given tile
function clear(r, c)
	-- return if clear (exit condition for recursive clear)
	if (is_set(r, c, is_clear)) return
	-- return if flagged (can't clear flagged tile)
	if (is_set(r, c, is_flagged)) return

	-- remove maybe flag
	if (is_set(r, c, is_maybe_flagged)) then
		board.tiles[r][c] ^^= is_maybe_flagged
	end
	board.tiles[r][c] |= is_clear

	if (board.generated == false) then
		generate_mines(r, c)
		board.generated = true
	end

	-- if cleared tile is mine (lose condition)
	if (is_set(r, c, is_mine)) then
		-- end game on failure
		game.over = true
		frozen_timer = timer
		sfx(2)
		return
	end

	-- making it here means game didn't end this turn
	-- increase total cleared tiles
	board.cleared_tiles += 1

	-- clear nearby tiles if current tile is 0
	if ((board.tiles[r][c] & value_mask) == 0) then
		-- cascade sound
		sfx(0)
		for d = 1, 8, 1 do
			adj = find_adjacent(r, c, d, false)
			if (adj) then
				-- if cascading to a flagged tile, unflag the tile before clearing
				if (is_set(adj.row, adj.col, is_flagged)) then
					-- run flag twice b/c flag toggles between 3 states
					flag(adj.row, adj.col) -- maybe flagged
					flag(adj.row, adj.col) -- no flag
				elseif (is_set(adj.row, adj.col, is_maybe_flagged)) then
					flag(adj.row, adj.col) -- no flag
				end
				clear(adj.row, adj.col)
			end
		end
	end

	-- if all non mine tiles are cleared
	-- win condition
	if (board.cleared_tiles == (board.area - board.mines)) then
		-- game ends with win
		game.over = true
		game.win = true
		-- freeze timer
		frozen_timer = timer
		-- save new high (low) score! if applicable
		if (frozen_timer < high_score) then
			high_score = frozen_timer
			dset(0, frozen_timer)
		end
	end

	-- clear sound
	sfx(1)
end

function make_board()
	board = {}
	board.columns = 10
	board.rows = 7
	board.mines = 10
	board.area = board.columns * board.rows
	-- are the mines generated yet
	board.generated = false

	-- represents how many flags are left
	board.active_mines = board.mines
	-- represents how many tiles are cleared
	board.cleared_tiles = 0

	board.tiles = {}

	-- create 2d array representing tiles
	for i = 1, board.rows, 1 do
		board.tiles[i] = {}
		for j = 1, board.columns, 1 do
			board.tiles[i][j] = 0
		end
	end
end

-- display sprites on the board given relative position
function board_sprite(s, r, c)
	spr(s, (c + 2) * 8, (r + 5) * 8)
end

-- display text on the board given relative position
function board_text(t, r, c)
	print(t, (c + 2) * 8 + 2, (r + 5) * 8 + 2)
end

-- draw the board to the screen
function draw_board()
	-- loop through all tiles
	for i = 1, board.rows, 1 do
		for j = 1, board.columns, 1 do
			-- if game hasn't ended
			if (not game.over) then
				-- if current tile is clear
				if (is_set(i, j, is_clear)) then
					board_sprite(2, i, j)
					-- display text on non 0 clear tiles
					if ((board.tiles[i][j] & value_mask) > 0) then
						board_text(board.tiles[i][j] & value_mask, i, j)
					end
				-- if current tile is flagged
				elseif(is_set(i, j, is_flagged)) then
					board_sprite(3, i, j)
				elseif (is_set(i, j, is_maybe_flagged)) then
					board_sprite(3, i, j)
					board_text("?", i, j)
				end
			-- if game has ended
			else
				-- display clear tiles (same as above)
				if (is_set(i, j, is_clear)) then
					board_sprite(2, i, j)
					if ((board.tiles[i][j] & value_mask) > 0) then
						board_text(board.tiles[i][j] & value_mask, i, j)
					end
				end
				-- if tile is a mine
				if (is_set(i, j, is_mine)) then
					-- if tile is also flagged
					-- display flagged mine sprite
					if (is_set(i, j, is_flagged) or is_set(i, j, is_maybe_flagged)) then
						board_sprite(5, i, j)
					-- if mine but not flagged
					-- display mine sprite
					else
						board_sprite(4, i, j)
					end
				-- if flagged but not mine
				-- display flag sprite
				elseif (is_set(i, j, is_flagged)) then
					board_sprite(3, i, j)
				elseif (is_set(i, j, is_maybe_flagged)) then
					board_sprite(3, i, j)
					board_text("?", i, j)
				end
			end
		end -- j loop
	end -- i loop
end
__gfx__
0000000033333333bbbbbbbb00000000000000000000000022220000000000000000000011111111110000000000001100000011110000000000000000000000
0000000033333333bbbbbbbb05888000000044000588800022220000000000000000000011111111110000000000001100000011110000000000000000000000
0070070033333333bbbbbbbb05888880005455000588800022220000000000000000000000000000110000000000001100000000000000000000000000000000
0007700033333333bbbbbbbb05888880056655500500000022220000000000000000000000000000110000000000001100000000000000000000000000000000
0007700033333333bbbbbbbb05008880056555500500050000002222000000000000000000000000110000000000001100000000000000000000000000000000
0070070033333333bbbbbbbb05000000055555500000555000002222000000000000000000000000110000000000001100000000000000000000000000000000
0000000033333333bbbbbbbb05000000005555000000050000002222000000001111111100000000110000000000001100000000000000000000001111000000
0000000033333333bbbbbbbb00000000000000000000000000002222000000001111111100000000110000000000001100000000000000000000001111000000
88800888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
80000008099999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
80000008977877900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000977877900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000977877900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
80000008977777900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
80000008977777900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88800888099999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
08800880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
08000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
08000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
08800880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000060000606066600660606000000660066006606660666000000000666066600000000000000000000000000000000
00000000000000000000000000000000000666000606006006000606000006000600060606060600006000000006060600000000000000000000000000000000
00000000000000000000000000000000066666660666006006000666000006660600060606600660000000000066060600000000000000000000000000000000
00000000000000000000000000000000006666600606006006060606000000060600060606060600006000000006060600000000000000000000000000000000
00000000000000000000000000000000006000600606066606660606000006600066066006060666000000000666066600000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000099999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044000000000000000000
00000000977877906660000000000000000000000000000000000000000000000000000000000000000000000000000000000000005455006600666000000000
00000000977877906060000000000000000000000000000000000000000000000000000000000000000000000000000000000000056655500600606000000000
00000000977877906060000000000000000000000000000000000000000000000000000000000000000000000000000000000000056555500600606000000000
00000000977777906060000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555500600606000000000
00000000977777906660000000000000000000000000000000000000000000000000000000000000000000000000000000000000005555006660666000000000
00000000099999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000666066606660066006600000066666000000666006600000066066606660666066600000666060006660606066606600066000000000000
00000000000000000606060606000600060000000660006600000060060600000600006006060606006000000606060006060606006006060600000000000000
00000000000000000666066006600666066600000660606600000060060600000666006006660660006000000666060006660666006006060600000000000000
00000000000000000600060606000006000600000660006600000060060600000006006006060606006000000600060006060006006006060606000000000000
00000000000000000600060606660660066000000066666000000060066000000660006006060606006000000600066606060666066606060666000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000
00000000000000000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000
00000000000000000000001188833888333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001183333338333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001183333338333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001183333338333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001183333338333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001188833888333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001133333333333333333333333333333333333333333333333333333333333333333333333333333333110000000000000000000000
00000000000000000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000
00000000000000000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000066666000000666006600000066060006660666066600000000600000000066666000000666006600000666060006660066000000000000
00000000000000000660006600000060060600000600060006000606060600000006660000000660606600000060060600000600060006060600000000000000
00000000000000000660606600000060060600000600060006600666066000000066666000000666066600000060060600000660060006660600000000000000
00000000000000000660006600000060060600000600060006000606060600000006660000000660606600000060060600000600060006060606000000000000
00000000000000000066666000000060066000000066066606660606060600000000600000000066666000000060066000000600066606060666000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__map__
0000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011000000000000000000000004000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000e080808080808080808080f000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000b010101010101010101010a000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000b010101010101010101010a000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000b010101010101010101010a000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000b010101010101010101010a000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000b010101010101010101010a000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000b010101010101010101010a000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000b010101010101010101010a000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000c090909090909090909090d000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060606060606060606060606060606000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000500000202004020080200d0201102015020180201b0201d020200202302026020290202b0202e02030020330203502037020390203a0203b0203d0203f0203f0203f0203f0203f0203f0203f0203f0203f020
0001010000000077500a0500c0500f050110501205013050150501605017050180501a0501b0501d0501e0501f050200502005022050230502305024050250502505026050260502705027050270502705027050
000400003565032650306502e6502c6502a6502765026650246502265021650206501f6501d6501c6501c6501b6501a650196501765017650156501465013650116500f6500e6500d6500c6500b6500a65009650
0001000021350213502135021350213502135021350213501d2001d2001d2001d2001d2001c2001c2001c2001c2001c2001c2001c2001c2001c2001c2001c2001c2001c2001b2001b2001b2001b2001c2001c200
000b00001300013000130001100010000110001300013000130001300011000110001300011000100002700027000260002500024000280001300011000100001100013000130001300011000110001100013000
001100001305011050100501105013050130501305011050110501105013050130501305013050110501005011050130501305013050130501105011050130501105010050000000000000000000000000000000
__music__
00 05424344

